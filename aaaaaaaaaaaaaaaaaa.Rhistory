lapply(as.list(v), function(x) grep(names(x),names(ks)))
as.list(v)[[2]]
as.list(v)[[3]]
names(as.list(v)[[3]])
names(v[[3]])
names(v[3])
sapply(v, function(x) grep(names(x),names(ks)))
i=2
index = append(index,grep(names(v[i]),names(ks)))
index = c()
index = append(index,grep(names(v[i]),names(ks)))
index
ka = kaks[[1]]
ks=kaks[[2]]
index = c()
v = table(unlist(stock_frame_list[[1]][[2]][100]))
for (i in length(v)){
index = append(index,grep(names(v[i]),names(ks)))
}
index
ka = kaks[[1]]
ks=kaks[[2]]
index = c()
v = table(unlist(stock_frame_list[[1]][[2]][100]))
for (i in length(v)){
index[i] = grep(names(v[i]),names(ks))
}
index
ks[780]
v
grep(names(v)[4],names(ks))
ka = kaks[[1]]
ks=kaks[[2]]
index = c()
v = table(unlist(stock_frame_list[[1]][[2]][100]))
for (i in length(v)){
index[i] = grep(names(v)[i],names(ks))
}
iindex
index
ka = kaks[[1]]
ks=kaks[[2]]
index = c()
v = table(unlist(stock_frame_list[[1]][[2]][100]))
for (i in 1:length(v)){
index[i] = grep(names(v)[i],names(ks))
}
index
ka = kaks[[1]]
ks=kaks[[2]]
index = c()
v = table(unlist(stock_frame_list[[1]][[2]][100]))
for (i in 1:length(v)){
names(index[i]) = grep(names(v)[i],names(ks))
index[i]=v[i]
}
ka = kaks[[1]]
ks=kaks[[2]]
index = c()
v = table(unlist(stock_frame_list[[1]][[2]][100]))
for (i in 1:length(v)){
index[i]=v[i]
names(index[i]) = grep(names(v)[i],names(ks))
}
iindex
iindex
index
names(index)
ka = kaks[[1]]
ks=kaks[[2]]
index = c()
v = table(unlist(stock_frame_list[[1]][[2]][100]))
for (i in 1:length(v)){
index[i] = grep(names(v)[i],names(ks))
}
rep(ka[index],v)
table(rep(ka[index],v))
ka = kaks[[1]]
ks=kaks[[2]]
index = c()
v = table(unlist(stock_frame_list[[1]][[2]][100]))
for (i in 1:length(v)){
index[i] = grep(names(v)[i],names(ks))
}
meankaks = mean(rep(ka[index],v)) / mean(rep(ks[index],v))
meankaks
dnds_per_simul = function(stock_frame,data,kaks){
ka = kaks[[1]]
ks=kaks[[2]]
index = c()
v = table(unlist(stock_frame_list[[1]][[2]][100]))
for (i in 1:length(v)){
index[i] = grep(names(v)[i],names(ks))
}
meankaks = mean(rep(ka[index],v)) / mean(rep(ks[index],v))
return(meankaks)
}
install.packages("huge")
install.packages("bnlearn")
library("huge")
library("bnlearn")
#################################################################
## TP Network inference // Dec 2020
## melina.gallopin@u-psud.fr
#################################################################
rm(list=ls())
## loading package huge
## install.packages("huge")
library(huge)
## loading bnlearn package
## install.packages("bnlearn")
library(bnlearn)
data(marks)
head(marks)
regul= rnorm(1)
regul= rnorm(100)
regul= rnorm(100)
cible1 = regul*3 + rnorm(1)
cible2 = regul*-4 + rnorm(1)
cor = cor.test(cible1,cible2)
cor
regul= rnorm(100)
cible1 = regul*3 + rnorm(1)
cible2 = regul*-4 + rnorm(1)
cor = cor.test(cible1,cible2)
cor$statistic
cor$estimate
regul= rnorm(100)
cible1 = regul*3 + rnorm(1)
cible2 = regul*3 + rnorm(1)
cor = cor.test(cible1,cible2)
correlation=cor$estimate
correlation
cor = cor.test(regul,cible2)
correlation=cor$estimate
correlation
View(cor)
regul= rnorm(100)
cible1 = regul*3 + rnorm(1)
cible2 = regul*-4 + rnorm(1)
cor = cor.test(cible1,cible2)
correlation=cor$estimate
solve(cor(marks))
edgeList= solve(cor(marks))
cereGraph = graph_from_edgelist(edgeList, directed = F)
library(igraph)
cereGraph = graph_from_edgelist(edgeList, directed = F)
4
plot.igraph(edgeList, vertex.color = "red", vertex.size = 5, vertex.label = NA,
arrow.size = 0.1, edge.color = "grey",)
edgeList
graph(edgeList)
qnorm(0.95,0,1)
qnorm(0.05,0,1)
qnorm(1-(0.05/2),0,1)
setwd("~/GitHub/Projet-treta-di")
library(readr)
freqAASurfaceInterfaceDi <- read_csv("freqAASurfaceInterfaceDi.csv")
View(freqAASurfaceInterfaceDi)
library(readr)
freqAASurfaceInterfaceDi <- read_csv("freqAASurfaceInterfaceDi.csv")
View(freqAASurfaceInterfaceDi)
library(readr)
freqAASurfaceInterfaceTri <- read_csv("freqAASurfaceInterfaceTri.csv")
View(freqAASurfaceInterfaceTri)
library(readr)
freqTypesAASurfaceInterface_Di <- read_csv("freqTypesAASurfaceInterface_Di.csv")
View(freqTypesAASurfaceInterface_Di)
library(readr)
freqTypesAASurfaceInterface_Tri <- read_csv("freqTypesAASurfaceInterface_Tri.csv")
View(freqTypesAASurfaceInterface_Tri)
library(readr)
tailleSurfaceInterface_Di <- read_csv("tailleSurfaceInterface_Di.csv")
View(tailleSurfaceInterface_Di)
library(readr)
tailleSurfaceInterface_Di <- read_csv("tailleSurfaceInterface_Di.csv")
View(tailleSurfaceInterface_Di)
library(readr)
tailleSurfaceInterface_Tri <- read_csv("tailleSurfaceInterface_Tri.csv")
View(tailleSurfaceInterface_Tri)
freqAASurfaceInterfaceDi[-"nom"]
datafreqAAdi$acide_amine=unique(freqAASurfaceInterfaceDi$acide_amine)
dataFreqAAdi = data.frame(acide_amine=unique(freqAASurfaceInterfaceDi$acide_amine))
datafreqAAdi$surface=sum(freqAASurfaceInterfaceDi$frequence_surface[which(freqAASurfaceInterfaceDi$acide_amine==dataFreqAAdi$acide_amine)])
datafreqAAdi$surface=sum(freqAASurfaceInterfaceDi$frequence_surface[which(freqAASurfaceInterfaceDi$acide_amine==dataFreqAAdi$acide_amine)])
dataFreqAAdi$acide_amine
dataFreqAAdi$surface=sum(freqAASurfaceInterfaceDi$frequence_surface[which(freqAASurfaceInterfaceDi$acide_amine==dataFreqAAdi$acide_amine)])
for (i in 1:20){
dataFreqAAdi$surface[i] = sum(freqAASurfaceInterfaceDi$frequence_surface[
which(freqAASurfaceInterfaceDi$acide_amine ==
dataFreqAAdi$acide_amine[i])])
}
for (i in 1:20){
dataFreqAAdi$interface1[i] = sum(freqAASurfaceInterfaceDi$frequence_interface[
which(freqAASurfaceInterfaceDi$acide_amine ==
dataFreqAAdi$acide_amine[i])])
}
dataFreqAAdi$interface2=NA
dataFreqAAtri = data.frame(acide_amine=unique(freqAASurfaceInterfaceTri$acide_amine))
for (i in 1:20){
dataFreqAAtri$interface1[i] = sum(freqAASurfaceInterfaceTri$frequence_interface1[
which(freqAASurfaceInterfaceTri$acide_amine ==
dataFreqAAtri$acide_amine[i])])
}
for (i in 1:20){
dataFreqAAtri$interface2[i] = sum(freqAASurfaceInterfaceTri$frequence_interface2[
which(freqAASurfaceInterfaceTri$acide_amine ==
dataFreqAAtri$acide_amine[i])])
}
for (i in 1:20){
dataFreqAAtri$surface[i] = sum(freqAASurfaceInterfaceTri$frequence_surface[
which(freqAASurfaceInterfaceTri$acide_amine ==
dataFreqAAtri$acide_amine[i])])
}
freqAA= dataFreqAAdi + dataFreqAAtri
freqAA= merge(dataFreqAAdi + dataFreqAAtri)
freqAA= merge(dataFreqAAdi,dataFreqAAtri,by=acide_amine)
freqAA= merge(dataFreqAAdi,dataFreqAAtri,by.x=dataFreqAAdi$acide_amine,by.y=dataFreqAAtri$acide_amine)
freqAA= merge(dataFreqAAdi,dataFreqAAtri,by=dataFreqAAdi$acide_amine)
freqAA= merge(dataFreqAAdi,dataFreqAAtri,by=intersect(dataFreqAAtri,dataFreqAAdi))
dataFreqAAdi[,2]
dataFreqAAdi[,1]
freqAA= merge(dataFreqAAdi,dataFreqAAtri,by=[,1])
freqAA= merge(dataFreqAAdi,dataFreqAAtri,by="[,1]")
freqAA= merge(dataFreqAAdi,dataFreqAAtri,by=1)
freqAA= merge(dataFreqAAdi,dataFreqAAtri)
freqAA= merge(dataFreqAAdi,dataFreqAAtri,by=c(1:4))
NA+2
dataFreqAAdi$interface2=0
freqAA= merge(dataFreqAAdi,dataFreqAAtri)
df1=dataFreqAAd
df1=dataFreqAAdi
df2=dataFreqAAtri
# create a new variable from the rownames
df1$rn <- rownames(df1)
df2$rn <- rownames(df2)
# bind the two dataframes together by row and aggregate
res <- aggregate(cbind(x,y,z) ~ rn, rbind(df1,df2), sum)
# or (thx to @alistaire for reminding me):
res <- aggregate(. ~ rn, rbind(df1,df2), sum)
# assign the rownames again
rownames(res) <- res$rn
# get rid of the 'rn' column
res <- res[, -1]
res <- aggregate(. ~ rn, rbind(df1,df2), sum)
result_df <- as.data.frame(as.matrix(df1) + as.matrix(df2))
df1[,-1]
rownames(df1)=df1$acide_amine
rownames(df2)=df1$acide_amine
df1[,-1]
df1=df1[,-1]
df2=df2[,-1]
# bind the two dataframes together by row and aggregate
res <- aggregate(cbind(,y,z) ~ rn, rbind(df1,df2), sum)
# or (thx to @alistaire for reminding me):
res <- aggregate(. ~ rn, rbind(df1,df2), sum)
# assign the rownames again
rownames(res) <- res$rn
# get rid of the 'rn' column
res <- res[, -1]
res <- aggregate(. ~ rn, rbind(df1,df2), sum)
# assign the rownames again
rownames(res) <- res$rn
# get rid of the 'rn' column
res <- res[, -1]
res
View(dataFreqAAtri)
FreqAA= rbind(df1,df2)
FreqAA$AA=freqAASurfaceInterfaceDi$acide_amine
FreqAA$AA=dataFreqAAtri$acide_amine
library(ggplot2)
library(tidyr)
str(FreqAA)
head(FreqAA)
FreqAA %>%
tidyr::gather(Type, Amount) %>%
ggplot(aes(x=Type, y=Amount, fill=Channel, group=Channel)) +
geom_col(position = position_dodge())
FreqAA %>%
tidyr::gather(Type, Amount, -AA %>%
ggplot(aes(x=Type, y=Amount, fill=AA, group=AA)) +
geom_col(position = position_dodge())
)
FreqAA %>%
tidyr::gather(Type, Amount, -AA )%>%
ggplot(aes(x=Type, y=Amount, fill=AA, group=AA)) +
geom_col(position = position_dodge())
FreqAA %>%
tidyr::gather(Type, Amount, -c(interface1,interface2,surface) )%>%
ggplot(aes(x=Type, y=Amount, fill=AA, group=AA)) +
geom_col(position = position_dodge())
FreqAA %>%
ggplot(aes(x=Type, y=Amount, fill=AA, group=AA)) +
geom_col(position = position_dodge())
FreqAA %>% pivot_longer(c(`surface`,`interface1`,"interface2"))
FreqAA %>%
pivot_longer(c(`surface`,`interface1`,"interface2"))  %>%
ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
FreqAA$interface1
FreqAA$interface1= log2(FreqAA$surface/FreqAA$interface1)
FreqAA$interface2= log2(FreqAA$surface/FreqAA$interface2)
FreqAA
FreqAA= FreqAA[,-1]
FreqAA= rbind(df1,df2)
FreqAA$AA=dataFreqAAtri$acide_amine
FreqAA$interface1= log2(FreqAA$interface1/FreqAA$surface)
FreqAA$interface2= log2(FreqAA$interface2/FreqAA$surface)
FreqAA= FreqAA[,-1]
FreqAA %>%
pivot_longer(c(`interface1`,"interface2"))  %>%
ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
+ labs(title =" diagramme à barres des propensions relatives pour chaque AA", x = "Acide aminés", y = "propensions")
+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
FreqAA= rbind(df1,df2)
FreqAA$AA=dataFreqAAtri$acide_amine
FreqAA$interface2= FreqAA$interface2/FreqAA$surface
FreqAA$interface1= FreqAA$interface1/FreqAA$surface
FreqAA= FreqAA[,-1]
FreqAA %>%
pivot_longer(c(`interface1`,"interface2"))  %>%
ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
+ labs(title =" diagramme à barres des propensions relatives pour chaque AA", x = "Acide aminés", y = "propensions")
+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
FreqAA %>%
pivot_longer(c(`interface1`,"interface2"))  %>%
ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge()) +
labs(title =" diagramme à barres des propensions relatives pour chaque AA", x = "Acide aminés", y = "propensions") +
+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
FreqAA %>%
pivot_longer(c(`interface1`,"interface2"))  %>%
bb = ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge()) +
labs(title =" diagramme à barres des propensions relatives pour chaque AA", x = "Acide aminés", y = "propensions") +
+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
bb
FreqAA %>%
pivot_longer(c(`interface1`,"interface2"))  %>%
bb = ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
FreqAA
FreqAA %>%
pivot_longer(c(`interface1`,"interface2"))
FreqAA= rbind(df1,df2)
FreqAA$AA=dataFreqAAtri$acide_amine
df1
df2
freqAA= aggregate(. ~ rn, rbind(df1,df2), sum)
FreqAA= aggregate(. ~ rn, rbind(df1,df2), sum)
FreqAA= freqAA[-1]
FreqAA$AA=dataFreqAAtri$acide_amine
df1=sort(df1)
freqAA= melt(list(df1, df2), id.vars = "AA")
cbind(df1[1], df1[, -1] + df2[match(df1$Type, df2$Type), -1])
for (i in 1:20){
FreqAAtri$surface[i] = df1$surface[i] +df2$surface[i]
FreqAAtri$interface1[i] = df1$interface1[i] +df2$interface1[i]
FreqAAtri$interface2[i] = df1$interface2[i] +df2$interface2[i]
}
for (i in 1:20){
FreqAA$surface[i] = df1$surface[i] +df2$surface[i]
FreqAA$interface1[i] = df1$interface1[i] +df2$interface1[i]
FreqAA$interface2[i] = df1$interface2[i] +df2$interface2[i]
}
FreqAA$AA=dataFreqAAtri$acide_amine
FreqAA$interface1pre= FreqAA$interface1/FreqAA$surface
FreqAA$interface2pre= FreqAA$interface2/FreqAA$surface
FreqAA %>%
pivot_longer(c(`interface1pre`,"interface2pre"))  %>%
bb = ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
FreqAA %>%
pivot_longer(c(`interface1pre`,"interface2pre"))
FreqAA %>%
as.data.frame(pivot_longer(c(`interface1pre`,"interface2pre")))  %>%
bb = ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
FreqAA %>%
fortify(pivot_longer(c(`interface1pre`,"interface2pre")))  %>%
bb = ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
FreqAA %>%
fortify(pivot_longer(c(`interface1pre`,"interface2pre")))
FreqAA == fortify(pivot_longer(c(`interface1pre`,"interface2pre")))
FreqAA= FreqAA %>% fortify(pivot_longer(c(`interface1pre`,"interface2pre")))
FreqAA  %>%
bb = ggplot(aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())  +
labs(title =" diagramme à barres des propensions relatives pour chaque AA", x = "Acide aminés", y = "propensions") +
+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
+labs(title =" diagramme à barres des propensions relatives pour chaque AA", x = "Acide aminés", y = "propensions") +
+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
+labs(title =" diagramme à barres des propensions relatives pour chaque AA", x = "Acide aminés", y = "propensions")
+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
+ggtitle =" diagramme à barres des propensions relatives pour chaque AA"+ xlab = "Acide aminés"+ ylab = "propensions")
+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
+ggtitle =" diagramme à barres des propensions relatives pour chaque AA"+ xlab = "Acide aminés"+ ylab = "propensions"
+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
bb+ggtitle =" diagramme à barres des propensions relatives pour chaque AA"+ xlab = "Acide aminés"+ ylab = "propensions"
bb+ scale_fill_discrete(name = "Type interface",labels=c("ancenstrale","récente"))
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
bb+ggtitle =" diagramme à barres des propensions relatives pour chaque AA"+ xlab = "Acide aminés"+ ylab = "propensions"
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
bb+ggtitle =" diagramme à barres des propensions relatives pour chaque AA"+ xlab = "Acide aminés"+ ylab = "propensions"
ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
FreqAA
FreqAA= FreqAA %>% fortify(pivot_longer(c(`interface1pre`,"interface2pre")))
freqAA
FreqAA
FreqAA= FreqAA %>% pivot_longer(c(`interface1pre`,"interface2pre"))
FreqAA= FreqAA %>% pivot_longer(c(`interface1pre`,"interface2pre"))
ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
bb = ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name)) +
geom_col(position = position_dodge())
bb+ggtitle =" diagramme à barres des propensions relatives pour chaque AA"+ xlab = "Acide aminés"+ ylab = "propensions"
FreqAA$interface1pre= log2(FreqAA$surface/FreqAA$interface1)
FreqAA$interface2pre= log2(FreqAA$surface/FreqAA$interface2)
FreqAA= FreqAA %>% pivot_longer(c(`interface1pre`,"interface2pre"))
FreqAA = FreqAA[-c(5,6)]
FreqAA= FreqAA %>% pivot_longer(c(`interface1pre`,"interface2pre"))
ggplot(data= FreqAA, aes(x=AA, y=value, fill=name, group=name),title = "aaa") +
geom_col(position = position_dodge())
FreqAA$interface2pre= log2(FreqAA$surface/FreqAA$interface2)
View(FreqAA)
Freqtype = data.frame(HP_surface, POL_surface, CHG_surface,HP_interface1, POL_interface1, CHG_interface1,HP_interface2, POL_interface2, CHG_interface2,nom )
Freqtype = data.frame(HP_surface, POL_surface, CHG_surface,HP_interface1, POL_interface1, CHG_interface1,HP_interface2, POL_interface2, CHG_interface2,nom )
Freqtype = data.frame(colnames= c(HP_surface, POL_surface, CHG_surface,HP_interface1, POL_interface1, CHG_interface1,HP_interface2, POL_interface2, CHG_interface2,nom )
)
Freqtype = data.frame(colnames= c("HP_surface", "POL_surface", "CHG_surface","HP_interface1", "POL_interface1", "CHG_interface1","HP_interface2", "POL_interface2", "CHG_interface2","nom" ))
freqTypesAASurfaceInterface_Di$HP_surface1=freqTypesAASurfaceInterface_Di$HP_surface
freqTypesAASurfaceInterface_Di$POL_surface1=freqTypesAASurfaceInterface_Di$POL_surface
freqTypesAASurfaceInterface_Di$CHG_surface1=freqTypesAASurfaceInterface_Di$CHG_surface
freqTypesAASurfaceInterface_Di$HP_surface2=NA
freqTypesAASurfaceInterface_Di$POL_surface2=NA
freqTypesAASurfaceInterface_Di$CHG_surface2=NA
freqTypesAASurfaceInterface_Di=freqTypesAASurfaceInterface_Di[,-c(1,2,3,4)]
freqTypesAASurfaceInterface_Tri=freqTypesAASurfaceInterface_Tri[,-1]
cbind(freqTypesAASurfaceInterface_Tri, freqTypesAASurfaceInterface_Di)
freqTypesAASurfaceInterface_Di$POL_surface=freqTypesAASurfaceInterface_Di$POL_surface1
freqTypesAASurfaceInterface_Di$HP_surface=freqTypesAASurfaceInterface_Di$HP_surface1
freqTypesAASurfaceInterface_Di$CHG_surface=freqTypesAASurfaceInterface_Di$CHG_surface1
freqTypesAASurfaceInterface_Di$CHG_interface2=freqTypesAASurfaceInterface_Di$CHG_surfarce2
View(freqTypesAASurfaceInterface_Di)
freqTypesAASurfaceInterface_Di$CHG_interface2=freqTypesAASurfaceInterface_Di$CHG_surface2
freqTypesAASurfaceInterface_Di$POL_interface2=freqTypesAASurfaceInterface_Di$POL_surface2
freqTypesAASurfaceInterface_Di$HP_interface2=freqTypesAASurfaceInterface_Di$HP_surface2
freqTypesAASurfaceInterface_Di
freqTypesAASurfaceInterface_Di[-"HP_surface2"]
freqTypesAASurfaceInterface_Di["HP_surface2"]
colnames(freqTypesAASurfaceInterface_Di)
freqTypesAASurfaceInterface_Di$HP_interface1=freqTypesAASurfaceInterface_Di$HP_interface
freqTypesAASurfaceInterface_Di$POL_interface1=freqTypesAASurfaceInterface_Di$POL_interface
freqTypesAASurfaceInterface_Di$CHG_interface1=freqTypesAASurfaceInterface_Di$CHG_interface
colnames(freqTypesAASurfaceInterface_Di)
freqTypesAASurfaceInterface_Di=freqTypesAASurfaceInterface_Di[-c(1,2,3,5,6,7,8,9,10)]
colnames(freqTypesAASurfaceInterface_Di)
cbind(freqTypesAASurfaceInterface_Tri, freqTypesAASurfaceInterface_Di)
rbind(freqTypesAASurfaceInterface_Tri, freqTypesAASurfaceInterface_Di)
freqType=rbind(freqTypesAASurfaceInterface_Tri, freqTypesAASurfaceInterface_Di)
View(freqType)
library(readr)
InterfaceScoreConsurf <- read_csv("Consurf/InterfaceScoreConsurf.csv")
View(InterfaceScoreConsurf)
InterfaceScoreConsurf$moyenne_consurf_interface2[which(InterfaceScoreConsurf$moyenne_consurf_interface2==0)]=NA
summary(InterfaceScoreConsurf)
taillepreDi$nom=tailleSurfaceInterface_Di$nom
taillepreDi=data.frame()
taillepreDi$nom=tailleSurfaceInterface_Di$nom
taillepreDi=data.frame(nom=tailleSurfaceInterface_Di$nom,taille_interface1=(tailleSurfaceInterface_Di$taille_interface/tailleSurfaceInterface_Di$taille_surface),taille_interface2=NA)
taillepreTri=data.frame(nom=tailleSurfaceInterface_Di$nom,taille_interface1=(tailleSurfaceInterface_Tri$taille_interface1/tailleSurfaceInterface_Tri$taille_surface),taille_interface2=(tailleSurfaceInterface_Tri$taille_interface2/tailleSurfaceInterface_Tri$taille_surface))
taillepre=rbind(taillepreDi, taillepreTri)
taillepre
boxplot(taillepre[,-1])
boxplot(taillepre[,-1],range=1)
boxplot(taillepre[,-1],range=0.6)
boxplot(taillepre[,-1],range=1)
boxplot(taillepre[,-1])
boxplot(taillepre[,-1],outline=FALSE)
summary(taillepre)
var(taillepre$taille_interface1)
var(taillepre$taille_interface2)
var(taillepre$taille_interface2,na.rm = TRUE)
shapiro.test(taillepre$taille_interface1)
shapiro.test(taillepre$taille_interface2)
shapiro.test(taillepre$taille_interface2,na.rm=TRUE)
shapiro.test(taillepre$taille_interface)
wilcox.test(taillepre$taille_interface2,na.rm=TRUE)
wilcox.test(taillepre[,-1],na.rm=TRUE)
wilcox.test(taillepre$taille_interface1,taillepre$taille_interface2)
history(inf)
savehistory("~/GitHub/Projet-treta-di/aaaaaaaaaaaaaaaaaa.Rhistory")
